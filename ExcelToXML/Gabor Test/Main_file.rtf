{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red191\green100\blue38;
\red254\green187\blue91;\red86\green132\blue173;\red88\green118\blue71;\red117\green114\blue185;\red109\green109\blue109;
\red152\green54\blue29;}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c74902\c39216\c14902;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c45882\c44706\c72549;\csgenericrgb\c42745\c42745\c42745;
\csgenericrgb\c59608\c21176\c11373;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 \

\f1 \cf4 \cb3 def \cf5 \cb3 parse_root\cf2 \cb3 (reference_uri\cf4 , \cf2 xml_file):\
    i = \cf6 0\
    \cf2 tree = et.parse(xml_file)\
    root = tree.getroot()\
    \cf4 for \cf2 item \cf4 in \cf2 root.findall(\cf7 './/artworkContentGraphicElement'\cf2 ):\
        \cf8 \cb3 print\cf2 \cb3 (\cf8 \cb3 len\cf2 \cb3 (root))\
        \cf4 if \cf7 'artworkContentGraphicElement' \cf4 in \cf2 item.tag:\
            \cf8 \cb3 print\cf2 \cb3 (\cf8 \cb3 len\cf2 \cb3 (item))\
            \cf4 while \cf8 \cb3 len\cf2 \cb3 (reference_uri) != \cf6 0\cf2 :\
                msg = reference_uri.pop(i)\
                new_element = et.SubElement(item\cf4 , \cf7 "graphicElementReference"\cf2 )\
                new_reference_uri = et.SubElement(new_element\cf4 , \cf7 "referenceURI"\cf2 )\
                new_reference_uri.text = msg\
                \cf8 \cb3 print\cf2 \cb3 (new_reference_uri\cf4 , \cf2 new_reference_uri.text)\
    \cf9 \cb3 # tree.append(root)\
    \cf2 \cb3 et.register_namespace(\cf7 'artwork_content'\cf4 , \cf7 'urn:gs1:ecom:artwork_content:xsd:3'\cf2 )\
    et.register_namespace(\cf7 'sh'\cf4 , \cf7 'http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader'\cf2 )\
    et.register_namespace(\cf7 'xsi'\cf4 , \cf7 'http://www.w3.org/2001/XMLSchema-instance'\cf2 )\
    \cf9 \cb3 # writing out to a new file since the writing to the same file does not seem to work.\
    \cf2 \cb3 tree.write(\cf7 "NEW_FILE2.xml"\cf4 , \cf10 \cb3 xml_declaration\cf2 \cb3 =\cf4 True, \cf10 \cb3 encoding\cf2 \cb3 =\cf7 'utf-8'\cf4 , \cf10 \cb3 method\cf2 \cb3 =\cf7 "xml"\cf2 )\
    \cf4 return \cf8 \cb3 print\cf2 \cb3 (\cf7 "write to referenceUri is completed"\cf2 )\
\
\
\cf4 def \cf5 \cb3 parse_root2\cf2 \cb3 (root2\cf4 , \cf2 reference_identifier\cf4 , \cf2 tree2):\
    i = \cf6 0\
    \cf8 \cb3 print\cf2 \cb3 (i)\
\
    \cf4 for \cf2 elem \cf4 in \cf2 root2:\
        msg2 = reference_identifier.pop(i)\
        elem.text = msg2\
        \cf8 \cb3 print\cf2 \cb3 (msg2)\
        tree2.write(\cf7 'NEW_FILE2.xml'\cf2 )\
\
    \cf4 return \cf8 \cb3 print\cf2 \cb3 (\cf7 "write to referenceUri is completed"\cf2 )\
}